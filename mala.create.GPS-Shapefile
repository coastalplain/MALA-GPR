##
## The script below is meant to be run in R
## Currently, it is being tested on a 32-bit Windows installation
## M. Scott Harris, Ph.D.  ScottHarris2007-gmail
##

#install.packages(c("rgdal", "sp"))
library(rgdal)
library(sp)
library(maptools)  #to utilize rgeos gUnion command later

##Set your parent (upper level) GPR directory
parent.folder = "G:/Data/GPR/20080804_JamesIs_MSH/250mHz"
setwd(parent.folder)

##Obtain the list of all COR files in the directories and sub-directories
##  in preparation for the loop to create all shapefiles from the COR files
fileList <- dir(pattern=".cor", recursive = TRUE, include.dirs=TRUE)
  #summary(fileList)  ##shows the Length Class and Mode of the dataframe
  #head(fileList)  ##shows the first few rows of the dataframe
  #fileList[12]  ##brings out element 12 in the file list
fileCount <- NROW(fileList)  #how many files will need to be processed, use as counter
startTime <- format(Sys.time(), format="%Y%m%d%H%M%S")

## Begin Loop for each COR file
##

for (i in 1:length(fileList)) {

fileList[i]
mala.cor.working <- fileList[i]  #full path and filename 
mala.cor.filename <- basename(mala.cor.working)  #filename only
mala.cor.path <- dirname(mala.cor.working)  #directory only
mala.cor.fullpath <- paste(getwd(),"/",mala.cor.path,"/", sep="", collapse=NULL)
mala.cor.shapefile <- paste("pt_",mala.cor.filename, sep="", collapse=NULL)

##http://stackoverflow.com/questions/30127293/how-to-convert-csv-to-shp-in-r
##some code was pulled from @iembry off the above weblink and modified

corData <- read.table(file=mala.cor.working, header=FALSE,sep="\t")
class(corData)  #just shows that the data are in a data.frame

##Add the header information
corData$filepath <- mala.cor.fullpath
corData$filename <- mala.cor.filename
corData$fileID <- paste(corData[1:1,c("V2")],"_",mala.cor.filename, sep="")
names(corData) <- c("shotpoint","date","time","latitude","lat-NS","longitude","lon-EW","elevation","M","GPS-dop","filepath","filename","fileID")

##Multiply the Longitude Column by -1 to get into correct hemisphere
corData$longitude <- corData$longitude * -1

#making a large dataframe of all processed data, then convert to a shapefile
if (i == 1) {
corDataAll <- corData
} else {
#build a large dataframe with all datapoints to be changed to a shapefile in last step
corDataAll <- rbind(corDataAll, corData)
}
##create a spatial class and export to a shapefile
coordinates(corData)<-~longitude+latitude
class(corData)  #check to see that indeed a spatial file was produced
writeOGR(corData, mala.cor.path, mala.cor.shapefile, driver = "ESRI Shapefile")

}  #end of for loop

##Write out the final Shapefile with all files processed

coordinates(corDataAll)<-~longitude+latitude
class(corDataAll)
mala.cor.shapefile.all <- paste("ptGPRall_",startTime, sep="", collapse=NULL)
writeOGR(corDataAll, getwd(), mala.cor.shapefile.all, driver = "ESRI Shapefile")

#end of script

