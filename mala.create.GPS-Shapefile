##
## The script below is meant to be run in R
## Currently, it is being tested on a 32-bit Windows installation
## M. Scott Harris, Ph.D.  ScottHarris2007-gmail
##

##REMOVE ALL EXISTING OBJECTS -- MAY WANT TO COMMENT OUT
rm(list=ls(all=TRUE))

#INSTALL PACKAGES NOT YET INSTALLED
#FROM:  http://stackoverflow.com/questions/4090169/elegant-way-to-check-for-missing-packages-and-install-them
   list.of.packages <- c("rgdal", "sp", "maptools", "rgeos", "tcltk", "stringi", "stringr")
   new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
   if(length(new.packages)) install.packages(new.packages)

#LOAD LIBRARIES
library(rgdal)
library(sp)
library(maptools)
library(rgeos)
library(tcltk)
library(stringi)
library(stringr)

fileListLarge <- vector()
testdf <- vector()
cleanFileList <- vector()
rejectFileList <- vector()
fileList <- vector()
cleanFileList <- vector()
cleanFileList2 <- vector()
corDataAll <- vector()
fileList.fourColumns <- vector()

##Set your parent (upper level) GPR directory
  parent.folder <- choose.dir(getwd(), "Choose Starting Point for Search")
#parent.folder <- "Y:/___CAINHOY_FOLDERS/Data/BigProjectData/CapersInlet_NGDC/EDMAP_2009/GPR/AllProcessed"
  setwd(parent.folder)

##Set your final Point Shapefile Destination Folder
#final.folder <- choose.dir(getwd(), "FINAL Output Folder for the corDataAll shapefile")
  final.folder <- "K:/Dropbox/Data/GPR" #choose.dir(getwd(), "FINAL Output Folder for the corDataAll shapefile")


##Obtain the list of all COR files in the directories and sub-directories
##  in preparation for the loop to create all shapefiles from the COR files
  fileList.full <- dir(pattern=".cor$", recursive = TRUE, include.dirs=TRUE)
       #summary(fileList)  ##shows the Length Class and Mode of the dataframe
       #head(fileList)  ##shows the first few rows of the dataframe
       #fileList[12]  ##brings out element 12 in the file list
  fileCount <- NROW(fileList.full)  #how many files will need to be processed, use as counter
  startTime <- format(Sys.time(), format="%Y%m%d%H%M%S")
  fileList <- vector()

##Filter out files that have 0 size (aka no GPS coords) file.info(fileList[i])$size = 0
  for (i in 1:length(fileList.full)) 
    {
    if (file.info(fileList.full[i])$size >0)
    fileList <- c(fileList, fileList.full[i])
    }

stopifnot(length(fileListLarge) > 0)

### ADD OTHER FILTERS HERE

## Begin Loop for each COR file

for (i in 1:length(fileList)) 
   {
   print(fileList[i])
   mala.cor.working <- fileList[i]  #full path and filename 
   mala.cor.filename <- basename(mala.cor.working)  #filename only
   mala.cor.path <- dirname(mala.cor.working)  #directory only
   mala.cor.fullpath <- paste(getwd(),"/",mala.cor.path,"/", sep="", collapse=NULL)
   mala.cor.shapefile <- paste("MALA_pt_",mala.cor.filename, sep="", collapse=NULL)

   ##http://stackoverflow.com/questions/30127293/how-to-convert-csv-to-shp-in-r
   ##some code was pulled from @iembry off the above weblink and modified

   #READ IN THE DATA
   corData <- read.table(file=mala.cor.working, header=FALSE,sep="\t")
   class(corData)  #just shows that the data are in a data.frame

   ##Add the header information
   corData$filepath <- mala.cor.fullpath
   corData$filename <- mala.cor.filename
   corData$fileID <- paste(corData[1:1,c("V2")],"_",mala.cor.filename, sep="")
   names(corData) <- c("shotpoint","date","time","latitude","lat-NS","longitude","lon-EW","elevation","M","GPS-dop","filepath","filename","fileID")

   #REMOVE BAD LINES
   # for GSSI input:   names(corData) <- c("latitude","longitude","Zmeters","ShotPoint")
   corData <- corData[!corData$latitude == "0", ] # make sure latitude is not zero
   corData <- corData[!corData$longitude == "0", ] # make sure longitude is not zero
   corData <- corData[!corData$shotpoint == "Shot", ]
     
   ##Multiply the Longitude Column by -1 to get into correct hemisphere
   corData$longitude <- as.numeric(corData$longitude) * -1
   corData$latitude <- as.numeric(corData$latitude) * 1

   ##making a large dataframe of all processed data, then convert to a shapefile

   if (i == 1) 
   {
     corDataAll <- corData
     } else 
     {
     #build a large dataframe with all datapoints to be changed to a shapefile in last step
     corDataAll <- rbind(corDataAll, corData)
   }
}  #end of for loop

   ##Write out the final Shapefile with all files processed

   coordinates(corDataAll)<-~longitude+latitude
   class(corDataAll)
   mala.cor.shapefile.all <- paste("ptMALAall_",startTime, sep="", collapse=NULL)
   setwd(final.folder)
   writeOGR(corDataAll, getwd(), mala.cor.shapefile.all, driver = "ESRI Shapefile")

   #COPY WGS 1984 projection file from final.folder (hard wired into code)
   fileProjection <- paste(mala.cor.shapefile.all,".prj")
   fileProjection <- gsub(" ","",fileProjection)
   file.copy("wgs1984.prj",fileProjection)
   print("Projection file exported for WGS 1984 -- mofify accordingly")

#end of R script

