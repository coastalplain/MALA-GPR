##
## The script below is meant to be run in R
## Currently, it is being tested on a 32-bit Windows installation
## M. Scott Harris, Ph.D.  ScottHarris2007-gmail
##

#install.packages(c("rgdal", "sp"))
library(rgdal)
library(sp)
library(maptools)  #to utilize rgeos gUnion command later

##Set your parent (upper level) GPR directory
###### Eventually, this setting should be the only one needed due to a loop to create all the shapefiles
#parent.folder = "Z:/BigProjectData/GPR_Data/20080802_MtPleasant_MSH" 
parent.folder = "G:/Data/GPR/20080804_JamesIs_MSH/250mHz"
setwd(parent.folder)

##Obtain the list of all COR files in the directories and sub-directories
##  in preparation for the loop to create all shapefiles from the COR files
fileList <- dir(pattern=".cor", recursive = TRUE, include.dirs=TRUE)
  #summary(fileList)  ##shows the Length Class and Mode of the dataframe
  #head(fileList)  ##shows the first few rows of the dataframe
  #fileList[12]  ##brings out element 12 in the file list
fileCount <- NROW(fileList)  #how many files will need to be processed, use as counter
startTime <- format(Sys.time(), format="%Y%m%d%H%M%S")

## Begin Loop for each COR file
##

for (i in 1:length(fileList)) {

fileList[i]
mala.cor.working <- fileList[i]  #full path and filename 
mala.cor.filename <- basename(mala.cor.working)  #filename only
mala.cor.path <- dirname(mala.cor.working)  #directory only
mala.cor.fullpath <- paste(getwd(),"/",mala.cor.path,"/", sep="", collapse=NULL)
mala.cor.shapefile <- paste("pt_",mala.cor.filename, sep="", collapse=NULL)

##http://stackoverflow.com/questions/30127293/how-to-convert-csv-to-shp-in-r
##some of the code was pulled from @iembry off the above weblink and modified

#MyData <- read.table(file="G:/Data/GPR/20080804_JamesIs_MSH/250mHz/DAT_0038.cor", header=FALSE,sep="\t")
corData <- read.table(file=mala.cor.working, header=FALSE,sep="\t")
class(corData)


##Add the header information
names(corData) <- c("shotpoint","date","time","latitude","lat-NS","longitude","lon-EW","elevation","M","GPS-dop")
corData$filepath <- mala.cor.fullpath
corData$filename <- mala.cor.filename

##Multiply the Longitude Column by -1 to get into correct hemisphere
corData$longitude <- corData$longitude * -1

##create a spatial class and export to a shapefile
coordinates(corData)<-~longitude+latitude
class(corData)  #check to see that indeed a spatial file was produced
writeOGR(corData, mala.cor.path, mala.cor.shapefile, driver = "ESRI Shapefile")

#making a large shapefile of all processed data
if (i=1) {
primaryShapefile <- paste("ptGPR_",startTime, sep="", collapse=NULL)
writeOGR(corData, getwd(), primaryShapefile, driver = "ESRI Shapefile")
}
if (i > 1 {
#Union the current mala.cor.path, mala.cor.shapefile to the ptGPR_shapefile
#check for library(devtools) install_git from taRifx.geo.git and library(taRifx.geo)
}


}  #end of script
